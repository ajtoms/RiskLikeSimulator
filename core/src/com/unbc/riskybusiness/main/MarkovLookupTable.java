package com.unbc.riskybusiness.main;

/**
 * Provides Static Access to a lookup table of generated probability of success values generated by
 * Markov Chains.
 * 
 * @author Andrew J Toms II
 */
public class MarkovLookupTable {

    private static double[][] table = new double[][]
    {
        {0.417, 0.106, 0.027, 0.007, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000}, //table[0][x]
        {0.754, 0.363, 0.206, 0.091, 0.049, 0.021, 0.011, 0.005, 0.003, 0.001},
        {0.919, 0.656, 0.470, 0.315, 0.206, 0.134, 0.084, 0.054, 0.033, 0.021},
        {0.972, 0.785, 0.642, 0.477, 0.359, 0.253, 0.181, 0.123, 0.086, 0.057},
        {0.990, 0.890, 0.769, 0.638, 0.506, 0.397, 0.297, 0.224, 0.162, 0.118},
        {0.997, 0.934, 0.857, 0.745, 0.638, 0.521, 0.423, 0.329, 0.258, 0.193},
        {0.999, 0.967, 0.910, 0.834, 0.736, 0.640, 0.536, 0.446, 0.357, 0.287},
        {1.000, 0.980, 0.947, 0.888, 0.818, 0.730, 0.643, 0.547, 0.464, 0.380},
        {1.000, 0.990, 0.967, 0.930, 0.873, 0.808, 0.726, 0.646, 0.558, 0.480},
        {1.000, 0.994, 0.981, 0.954, 0.916, 0.861, 0.800, 0.724, 0.650, 0.568},
    };
    
    public static double getOddsOfSuccessfulAttack(int attackers, int defenders){
        if(attackers > 10 || defenders > 10){
            if(attackers > defenders)
                return 0.5 + Math.abs(attackers - defenders) * 0.05;
            else
                return 0.5 - Math.abs(attackers - defenders) * 0.05;
        }
        return table[defenders-1][attackers-1];
    }
    
}
